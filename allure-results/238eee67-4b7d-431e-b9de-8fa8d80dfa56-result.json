{"name": "日租房预定流程（带游戏机）测试", "status": "broken", "statusDetails": {"message": "Exception: elements search fail cause: page destroyed", "trace": "self = Page(id=151, path=/pages/rent/rent, query={}), selector = '.mr10.mr10.fc-858B9C.fc-858B9C', max_timeout = 30\n\n    def _get_elements(self, selector, max_timeout=0) -> typing.List[BaseElement]:\n        @timeout(max_timeout)\n        def search_elements():\n            elements = []\n            ret = self._send(\"Page.getElements\", {\"selector\": selector})\n            if hasattr(ret, \"error\"):\n                raise Exception(\n                    \"Error when finding elements[%s], %s\" % (selector, ret.error)\n                )\n            for el in ret.result.elements:\n                if \"nodeId\" in el.keys():\n                    element_cus = CustomElement(el, self.page_id, self.connection)\n                    elements.append(element_cus)\n                else:\n                    element = ELEMENT_TYPE.get(el.tagName, BaseElement)(\n                        el, self.page_id, self.connection\n                    )\n    \n                    elements.append(element)\n            return elements\n    \n        try:\n            self.logger.info(\"try to get elements: %s\" % selector)\n>           els = search_elements()\n\n/Users/apple/.pyenv/versions/3.8.2/lib/python3.8/site-packages/minium/miniprogram/base_driver/page.py:238: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (), kwargs = {}, timeout = 1602659773.092196, r = []\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        timeout = time.time() + duration\n        r = func(*args, **kwargs)\n        while not r:\n            time.sleep(1)\n            if timeout < time.time():\n                logger.warning(\"timeout for %s\" % func.__name__)\n                break\n>           r = func(*args, **kwargs)\n\n/Users/apple/.pyenv/versions/3.8.2/lib/python3.8/site-packages/minium/miniprogram/base_driver/minium_object.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @timeout(max_timeout)\n    def search_elements():\n        elements = []\n>       ret = self._send(\"Page.getElements\", {\"selector\": selector})\n\n/Users/apple/.pyenv/versions/3.8.2/lib/python3.8/site-packages/minium/miniprogram/base_driver/page.py:219: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Page(id=151, path=/pages/rent/rent, query={}), method = 'Page.getElements', params = {'pageId': 151, 'selector': '.mr10.mr10.fc-858B9C.fc-858B9C'}\n\n    def _send(self, method, params=None):\n        if params is None:\n            params = {}\n        params[\"pageId\"] = self.page_id\n>       return self.connection.send(method, params)\n\n/Users/apple/.pyenv/versions/3.8.2/lib/python3.8/site-packages/minium/miniprogram/base_driver/page.py:213: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <minium.miniprogram.base_driver.connection.Connection object at 0x1034d9b80>, method = 'Page.getElements', params = {'pageId': 151, 'selector': '.mr10.mr10.fc-858B9C.fc-858B9C'}, max_timeout = 60\n\n    def send(self, method, params=None, max_timeout=None):\n        if not params:\n            params = {}\n        if not max_timeout:\n            max_timeout = self.timeout\n        uid = uuid4()\n        message = json.dumps(\n            {\"id\": str(uid), \"method\": method, \"params\": params}, separators=(\",\", \":\")\n        )\n        self._sync_wait_msg_id = str(uid)\n        self.logger.debug(\"SEND > %s\" % message)\n        self._client.send(message)\n>       return self._receive_response(max_timeout)\n\n/Users/apple/.pyenv/versions/3.8.2/lib/python3.8/site-packages/minium/miniprogram/base_driver/connection.py:134: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <minium.miniprogram.base_driver.connection.Connection object at 0x1034d9b80>, max_timeout = 60\n\n    def _receive_response(self, max_timeout=None):\n        if max_timeout is None:\n            max_timeout = self.timeout\n        self._msg_lock.acquire()\n        self._msg_lock.wait(max_timeout)\n        self._msg_lock.release()\n    \n        if self._sync_wait_msg_id is None:  # 获取到了数据\n            if (\n                \"error\" in self._sync_wait_msg\n                and \"message\" in self._sync_wait_msg[\"error\"]\n            ):\n                err_msg = self._sync_wait_msg[\"error\"][\"message\"]\n                if err_msg:\n>                   raise MiniAppError(err_msg)\nE                   minium.framework.exception.MiniAppError: page destroyed\n\n/Users/apple/.pyenv/versions/3.8.2/lib/python3.8/site-packages/minium/miniprogram/base_driver/connection.py:159: MiniAppError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcases.test_day_order.TestDayOrder object at 0x1034d9250>, name = '李福庆', phone = '18516126760', room_type = '影院大床立方', except_result = {'expect_result': [{'房费总额': '¥148.00'}, {'增值服务': '¥40.00'}, {'实付金额': '¥188.00'}, {'总价': '¥188.00'}, {'入住人': '李福庆'}]}\n\n    @allure.title(\"日租房预定流程（带游戏机）测试\")\n    @pytest.mark.parametrize((\"name\", \"phone\", \"room_type\", \"except_result\"),\n                             get_data('test_switch_day_order', '../data/pro_data/test_day_order.yaml'))\n    def test_switch_day_order(self, name, phone, room_type, except_result):\n        \"\"\"\n        租赁游戏机订单\n        :param name: 入住人\n        :param phone: 电话号码\n        :param room_type: 房型名称\n        :param except_result: 期望结果集\n        :return: None\n        \"\"\"\n        with allure.step(\"日租房下单流程\"):\n            hotel_scheduled = self.main.goto_day_hotel_list().goto_hotel_detail().goto_hotel_scheduled(\n                room_type).save_order(name, phone).equipment_rental().select_switch()\n        with allure.step(\"断言日租房费\"):\n>           fee_result = hotel_scheduled.get_fee()\n\n../testcases/test_day_order.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/hotelscheduled.py:31: in get_fee\n    result = self.step('../data/hotel_scheduled.yaml')\n../pages/basepage.py:118: in step\n    element = self.find(step.get('selector'), step.get('params'))\n../pages/decorator.py:29: in handle\n    element = func(*args, **kwargs)\n../pages/basepage.py:30: in find\n    element = self._mini.app.get_current_page().get_element(locator, **value)\n/Users/apple/.pyenv/versions/3.8.2/lib/python3.8/site-packages/minium/miniprogram/base_driver/minium_log.py:134: in wrapper\n    result = func(*args, **kwargs)\n/Users/apple/.pyenv/versions/3.8.2/lib/python3.8/site-packages/minium/miniprogram/base_driver/page.py:116: in get_element\n    r = _element_filter()\n/Users/apple/.pyenv/versions/3.8.2/lib/python3.8/site-packages/minium/miniprogram/base_driver/page.py:105: in _element_filter\n    elements = self._get_elements(selector, max_timeout)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Page(id=151, path=/pages/rent/rent, query={}), selector = '.mr10.mr10.fc-858B9C.fc-858B9C', max_timeout = 30\n\n    def _get_elements(self, selector, max_timeout=0) -> typing.List[BaseElement]:\n        @timeout(max_timeout)\n        def search_elements():\n            elements = []\n            ret = self._send(\"Page.getElements\", {\"selector\": selector})\n            if hasattr(ret, \"error\"):\n                raise Exception(\n                    \"Error when finding elements[%s], %s\" % (selector, ret.error)\n                )\n            for el in ret.result.elements:\n                if \"nodeId\" in el.keys():\n                    element_cus = CustomElement(el, self.page_id, self.connection)\n                    elements.append(element_cus)\n                else:\n                    element = ELEMENT_TYPE.get(el.tagName, BaseElement)(\n                        el, self.page_id, self.connection\n                    )\n    \n                    elements.append(element)\n            return elements\n    \n        try:\n            self.logger.info(\"try to get elements: %s\" % selector)\n            els = search_elements()\n            if len(els) == 0:\n                self.logger.warning(\n                    f\"Could not found any element '{selector}' you need\"\n                )\n            else:\n                self.logger.info(\"find elements success: %s\" % str(els))\n            return els\n        except Exception as e:\n>           raise Exception(\"elements search fail cause: \" + str(e))\nE           Exception: elements search fail cause: page destroyed\n\n/Users/apple/.pyenv/versions/3.8.2/lib/python3.8/site-packages/minium/miniprogram/base_driver/page.py:247: Exception"}, "description": "\n        租赁游戏机订单\n        :param name: 入住人\n        :param phone: 电话号码\n        :param room_type: 房型名称\n        :param except_result: 期望结果集\n        :return: None\n        ", "steps": [{"name": "日租房下单流程", "status": "passed", "start": 1602659736758, "stop": 1602659743076}, {"name": "断言日租房费", "status": "broken", "statusDetails": {"message": "Exception: elements search fail cause: page destroyed\n", "trace": "  File \"/Users/apple/Documents/M3/m3_test/m3_mp_test/testcases/test_day_order.py\", line 76, in test_switch_day_order\n    fee_result = hotel_scheduled.get_fee()\n  File \"/Users/apple/Documents/M3/m3_test/m3_mp_test/pages/hotelscheduled.py\", line 31, in get_fee\n    result = self.step('../data/hotel_scheduled.yaml')\n  File \"/Users/apple/Documents/M3/m3_test/m3_mp_test/pages/basepage.py\", line 118, in step\n    element = self.find(step.get('selector'), step.get('params'))\n  File \"/Users/apple/Documents/M3/m3_test/m3_mp_test/pages/decorator.py\", line 29, in handle\n    element = func(*args, **kwargs)\n  File \"/Users/apple/Documents/M3/m3_test/m3_mp_test/pages/basepage.py\", line 30, in find\n    element = self._mini.app.get_current_page().get_element(locator, **value)\n  File \"/Users/apple/.pyenv/versions/3.8.2/lib/python3.8/site-packages/minium/miniprogram/base_driver/minium_log.py\", line 134, in wrapper\n    result = func(*args, **kwargs)\n  File \"/Users/apple/.pyenv/versions/3.8.2/lib/python3.8/site-packages/minium/miniprogram/base_driver/page.py\", line 116, in get_element\n    r = _element_filter()\n  File \"/Users/apple/.pyenv/versions/3.8.2/lib/python3.8/site-packages/minium/miniprogram/base_driver/page.py\", line 105, in _element_filter\n    elements = self._get_elements(selector, max_timeout)\n  File \"/Users/apple/.pyenv/versions/3.8.2/lib/python3.8/site-packages/minium/miniprogram/base_driver/page.py\", line 247, in _get_elements\n    raise Exception(\"elements search fail cause: \" + str(e))\n"}, "start": 1602659743076, "stop": 1602659756366}], "attachments": [{"name": "log", "source": "a958d157-8afe-46cf-9549-bb4371d7756e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "name", "value": "'李福庆'"}, {"name": "phone", "value": "'18516126760'"}, {"name": "room_type", "value": "'影院大床立方'"}, {"name": "except_result", "value": "{'expect_result': [{'房费总额': '¥148.00'}, {'增值服务': '¥40.00'}, {'实付金额': '¥188.00'}, {'总价': '¥188.00'}, {'入住人': '李福庆'}]}"}], "start": 1602659736758, "stop": 1602659756370, "uuid": "573daf3b-209b-432b-b835-758efc88afb2", "historyId": "c657250f55316b3f4063c4d8017ab52d", "testCaseId": "efc0d932794f10e7cec70acb777a9f73", "fullName": "test_day_order.TestDayOrder#test_switch_day_order", "labels": [{"name": "feature", "value": "日租房预定订单模块"}, {"name": "suite", "value": "test_day_order"}, {"name": "subSuite", "value": "TestDayOrder"}, {"name": "host", "value": "mac-test.local"}, {"name": "thread", "value": "71636-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_day_order"}]}