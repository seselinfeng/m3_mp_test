{"name": "整夜房远期预定游戏机选择测试", "status": "broken", "statusDetails": {"message": "Exception", "trace": "self = <testcases.test_night_order.TestNightOrder object at 0x11027edc0>, name = '李福庆', phone = '18516126760', room_type = '影院双床立方', start_date = '20', end_date = '21', except_result = {'expect_result': [{'房费总额': '¥138.00'}, {'增值服务': '¥30.00'}, {'实付金额': '¥168.00'}, {'总价': '¥168.00'}, {'入住人': '李福庆'}]}\n\n    @allure.title(\"整夜房远期预定游戏机选择测试\")\n    @pytest.mark.parametrize((\"name\", \"phone\", \"room_type\", \"start_date\", \"end_date\", \"except_result\"),\n                             get_data('test_switch_forward_night_order', '../data/pro_data/test_overnight_order.yaml'))\n    def test_switch_forward_night_order(self, name, phone, room_type, start_date, end_date, except_result):\n        \"\"\"\n        选择远期、选择游戏机测试\n        :param name: 入住人\n        :param phone: 电话号码\n        :param room_type: 房型名称\n        :param start_date: 开始日期\n        :param end_date: 结束日期\n        :param except_result: 期望结果集\n        :return: None\n        \"\"\"\n        with allure.step(f\"{start_date}日：{room_type}-整夜房下单流程\"):\n>           hotel_scheduled = self.main.set_night_date(\n                start_date, end_date).goto_day_hotel_list().goto_hotel_detail().goto_hotel_scheduled(\n                room_type).save_order(name,\n                                      phone).equipment_rental().select_switch()\n\n../testcases/test_night_order.py:201: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/hotellist.py:12: in goto_hotel_detail\n    self.step('../data/hotel_list.yaml')\n../pages/basepage.py:118: in step\n    element = self.find(step.get('selector'), step.get('params'))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (<pages.hotellist.HotelList testMethod=runTest>, '.img', {'max_timeout': 30}), kwargs = {}, BasePage = <class 'pages.basepage.BasePage'>, _black_list = [], _max_error_count = 3, _error_count = 4, instance = <pages.hotellist.HotelList testMethod=runTest>, element = None, filename = '150316113027.png'\nf = <_io.BufferedReader name='../screenshot/150316113027.png'>\ncontent = b'\\x89PNG\\r\\n\\x1a\\n\\x00\\x00\\x00\\rIHDR\\x00\\x00\\x01w\\x00\\x00\\x02[\\x08\\x02\\x00\\x00\\x00\\x90$Cy\\x00\\x00\\x01*iCCPSkia\\x00\\x0...8b\\xca\\x00\\xd0Ee\\x00\\xe8\\xa22\\x00tQ\\x19\\x00\\xba\\xa8\\x0c\\x00]\\xff\\x0fgg\\x11\\xbb\\x16h6\\xe5\\x00\\x00\\x00\\x00IEND\\xaeB`\\x82'\n\n    def handle(*args, **kwargs):\n        from pages.basepage import BasePage\n        # 首次进入隐私协议黑名单\n        _black_list = [\n        ]\n        # 最大重试次数\n        _max_error_count = 3\n        # 失败次数初始化\n        _error_count = 0\n        # 拿到BasePage实例对象\n        instance: BasePage = args[0]\n        log.info(\"run \" + func.__name__ + \"\\n args: \\n\" + repr(args) + \"\\n\" + repr(kwargs))\n        element = func(*args, **kwargs)\n        # 重置失败次数\n        _error_count = 0\n        if element:\n            return element\n        while not element:\n            # 错误日志\n            log.info(f\"未定位到当前元素，第{_error_count + 1}次重试\")\n            # 错误截图\n            filename = \"%s.png\" % datetime.datetime.now().strftime(\"%H%M%S%f\")\n            instance._mini.app.screen_shot(save_path=f\"../screenshot/{filename}\")\n            with open(f\"../screenshot/{filename}\", \"rb\") as f:\n                content = f.read()\n            allure.attach(content, func.__name__, attachment_type=allure.attachment_type.PNG)\n            # 缩短隐式等待时间，优化速度\n            time.sleep(1)\n            # 如果超出最大处理次数，抛出异常\n            if _error_count > _max_error_count:\n>               raise Exception\nE               Exception\n\n../pages/decorator.py:47: Exception"}, "description": "\n        选择远期、选择游戏机测试\n        :param name: 入住人\n        :param phone: 电话号码\n        :param room_type: 房型名称\n        :param start_date: 开始日期\n        :param end_date: 结束日期\n        :param except_result: 期望结果集\n        :return: None\n        ", "steps": [{"name": "20日：影院双床立方-整夜房下单流程", "status": "broken", "statusDetails": {"message": "Exception\n", "trace": "  File \"/Users/apple/Documents/M3/m3_test/m3_mp_test/testcases/test_night_order.py\", line 201, in test_switch_forward_night_order\n    hotel_scheduled = self.main.set_night_date(\n  File \"/Users/apple/Documents/M3/m3_test/m3_mp_test/pages/hotellist.py\", line 12, in goto_hotel_detail\n    self.step('../data/hotel_list.yaml')\n  File \"/Users/apple/Documents/M3/m3_test/m3_mp_test/pages/basepage.py\", line 118, in step\n    element = self.find(step.get('selector'), step.get('params'))\n  File \"/Users/apple/Documents/M3/m3_test/m3_mp_test/pages/decorator.py\", line 47, in handle\n    raise Exception\n"}, "attachments": [{"name": "find", "source": "7f74c58f-e53a-49d2-856a-15273984b41d-attachment.png", "type": "image/png"}, {"name": "find", "source": "963f8c1b-75d7-4746-bc15-0fadbfcfa659-attachment.png", "type": "image/png"}, {"name": "find", "source": "54b1623e-99a8-4db8-bb21-2d38e4c73935-attachment.png", "type": "image/png"}, {"name": "find", "source": "85bfa3d8-c736-46c5-87a5-f6954051f35f-attachment.png", "type": "image/png"}, {"name": "find", "source": "0b661da7-8997-4df4-9296-d9f6821ef114-attachment.png", "type": "image/png"}], "start": 1602658893178, "stop": 1602658997278}], "attachments": [{"name": "log", "source": "7d20dec9-6cf8-4975-a1c4-f1e91bc48e1a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "name", "value": "'李福庆'"}, {"name": "phone", "value": "'18516126760'"}, {"name": "room_type", "value": "'影院双床立方'"}, {"name": "start_date", "value": "'20'"}, {"name": "end_date", "value": "'21'"}, {"name": "except_result", "value": "{'expect_result': [{'房费总额': '¥138.00'}, {'增值服务': '¥30.00'}, {'实付金额': '¥168.00'}, {'总价': '¥168.00'}, {'入住人': '李福庆'}]}"}], "start": 1602658893178, "stop": 1602658997279, "uuid": "f8941762-d002-4b04-81d3-709f8339dff6", "historyId": "1ae171271cdfe9877dbf4b95df698188", "testCaseId": "e11204ad0118b86192b2af9cab7ac68c", "fullName": "test_night_order.TestNightOrder#test_switch_forward_night_order", "labels": [{"name": "feature", "value": "整夜房预定订单模块"}, {"name": "suite", "value": "test_night_order"}, {"name": "subSuite", "value": "TestNightOrder"}, {"name": "host", "value": "mac-test.local"}, {"name": "thread", "value": "70307-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_night_order"}]}