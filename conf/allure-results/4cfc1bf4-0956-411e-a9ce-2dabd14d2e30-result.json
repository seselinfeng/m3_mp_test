{"name": "整夜房预定流程（带游戏机）测试", "status": "broken", "statusDetails": {"message": "Exception", "trace": "self = <testcases.test_night_order.TestNightOrder object at 0x10e685370>, name = '李福庆', phone = '18516126760', room_type = '影院大床立方', except_result = {'expect_result': [{'房费总额': '¥148.00'}, {'增值服务': '¥30.00'}, {'实付金额': '¥178.00'}, {'总价': '¥178.00'}, {'入住人': '李福庆'}]}\n\n    @allure.title(\"整夜房预定流程（带游戏机）测试\")\n    @pytest.mark.parametrize((\"name\", \"phone\", \"room_type\", \"except_result\"),\n                             get_data('test_switch_night_order', '../data/pro_data/test_overnight_order.yaml'))\n    def test_switch_night_order(self, name, phone, room_type, except_result):\n        \"\"\"\n        租赁游戏机订单\n        :param name: 入住人\n        :param phone: 电话号码\n        :param room_type: 房型名称\n        :param except_result: 期望结果集\n        :return: None\n        \"\"\"\n        with allure.step(\"整夜房下单流程\"):\n            hotel_scheduled = self.main.goto_night_hotel_list().goto_hotel_detail().goto_hotel_scheduled(\n                room_type).save_order(name, phone).equipment_rental().select_switch()\n        with allure.step(\"断言整夜房费\"):\n>           fee_result = hotel_scheduled.get_fee()\n\n../testcases/test_night_order.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/hotelscheduled.py:31: in get_fee\n    result = self.step('../data/hotel_scheduled.yaml')\n../pages/basepage.py:118: in step\n    element = self.find(step.get('selector'), step.get('params'))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (<pages.hotelscheduled.HotelScheduled testMethod=runTest>, '.mr10.mr10.fc-858B9C.fc-858B9C', {'inner_text': '明细', 'max_timeout': 30}), kwargs = {}, BasePage = <class 'pages.basepage.BasePage'>, _black_list = [], _max_error_count = 3, _error_count = 4\ninstance = <pages.hotelscheduled.HotelScheduled testMethod=runTest>, element = None, filename = '145656751070.png', f = <_io.BufferedReader name='../screenshot/145656751070.png'>\ncontent = b'\\x89PNG\\r\\n\\x1a\\n\\x00\\x00\\x00\\rIHDR\\x00\\x00\\x01w\\x00\\x00\\x02[\\x08\\x02\\x00\\x00\\x00\\x90$Cy\\x00\\x00\\x01*iCCPSkia\\x00\\x0...b00e\\x10B\\xc2\\xc2\\x94A\\x08\\t\\x0bS\\x06!$,L\\x19\\x84\\x90\\xb0\\xfe? \\x12\\xc6\\x15\\xf0\\xd1\\xb0^\\x00\\x00\\x00\\x00IEND\\xaeB`\\x82'\n\n    def handle(*args, **kwargs):\n        from pages.basepage import BasePage\n        # 首次进入隐私协议黑名单\n        _black_list = [\n        ]\n        # 最大重试次数\n        _max_error_count = 3\n        # 失败次数初始化\n        _error_count = 0\n        # 拿到BasePage实例对象\n        instance: BasePage = args[0]\n        log.info(\"run \" + func.__name__ + \"\\n args: \\n\" + repr(args) + \"\\n\" + repr(kwargs))\n        element = func(*args, **kwargs)\n        # 重置失败次数\n        _error_count = 0\n        if element:\n            return element\n        while not element:\n            # 错误日志\n            log.info(f\"未定位到当前元素，第{_error_count + 1}次重试\")\n            # 错误截图\n            filename = \"%s.png\" % datetime.datetime.now().strftime(\"%H%M%S%f\")\n            instance._mini.app.screen_shot(save_path=f\"../screenshot/{filename}\")\n            with open(f\"../screenshot/{filename}\", \"rb\") as f:\n                content = f.read()\n            allure.attach(content, func.__name__, attachment_type=allure.attachment_type.PNG)\n            # 缩短隐式等待时间，优化速度\n            time.sleep(1)\n            # 如果超出最大处理次数，抛出异常\n            if _error_count > _max_error_count:\n>               raise Exception\nE               Exception\n\n../pages/decorator.py:47: Exception"}, "description": "\n        租赁游戏机订单\n        :param name: 入住人\n        :param phone: 电话号码\n        :param room_type: 房型名称\n        :param except_result: 期望结果集\n        :return: None\n        ", "steps": [{"name": "整夜房下单流程", "status": "passed", "start": 1602658511304, "stop": 1602658579353}, {"name": "断言整夜房费", "status": "broken", "statusDetails": {"message": "Exception\n", "trace": "  File \"/Users/apple/Documents/M3/m3_test/m3_mp_test/testcases/test_night_order.py\", line 70, in test_switch_night_order\n    fee_result = hotel_scheduled.get_fee()\n  File \"/Users/apple/Documents/M3/m3_test/m3_mp_test/pages/hotelscheduled.py\", line 31, in get_fee\n    result = self.step('../data/hotel_scheduled.yaml')\n  File \"/Users/apple/Documents/M3/m3_test/m3_mp_test/pages/basepage.py\", line 118, in step\n    element = self.find(step.get('selector'), step.get('params'))\n  File \"/Users/apple/Documents/M3/m3_test/m3_mp_test/pages/decorator.py\", line 47, in handle\n    raise Exception\n"}, "attachments": [{"name": "find", "source": "7bdf06cf-7e94-488c-951f-61952ae7aca8-attachment.png", "type": "image/png"}, {"name": "find", "source": "52b6768f-a8a5-4644-8674-7eeb9ceb7f92-attachment.png", "type": "image/png"}, {"name": "find", "source": "a2a064ba-abb3-4db8-ae9c-b0ad6c3496d4-attachment.png", "type": "image/png"}, {"name": "find", "source": "b6f95ce6-9216-482c-bce6-45951ad26c84-attachment.png", "type": "image/png"}, {"name": "find", "source": "bd4bab4b-d1e7-4a70-99d4-f8b7583324d5-attachment.png", "type": "image/png"}], "start": 1602658579354, "stop": 1602658618393}], "attachments": [{"name": "log", "source": "c2135e1a-3d1f-4baf-bc1b-68c01d9a6271-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "name", "value": "'李福庆'"}, {"name": "phone", "value": "'18516126760'"}, {"name": "room_type", "value": "'影院大床立方'"}, {"name": "except_result", "value": "{'expect_result': [{'房费总额': '¥148.00'}, {'增值服务': '¥30.00'}, {'实付金额': '¥178.00'}, {'总价': '¥178.00'}, {'入住人': '李福庆'}]}"}], "start": 1602658511304, "stop": 1602658618395, "uuid": "0a0ee041-93aa-4aaf-a151-3b4905395847", "historyId": "20a8be8be7c164b5c20607429ef0a3b4", "testCaseId": "4438eeed655937387952de9d3c303c18", "fullName": "test_night_order.TestNightOrder#test_switch_night_order", "labels": [{"name": "feature", "value": "整夜房预定订单模块"}, {"name": "suite", "value": "test_night_order"}, {"name": "subSuite", "value": "TestNightOrder"}, {"name": "host", "value": "mac-test.local"}, {"name": "thread", "value": "70307-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_night_order"}]}